---
const { lang } = Astro.props;
import { Image } from "astro:assets";
import restaurant from "../images/carousel/restaurant.webp";
import cafe from "../images/carousel/cafe.webp";
import family from "../images/carousel/productive-family.webp";
import onlineStores from "../images/carousel/online-stores.webp";
import pharmacy from "../images/carousel/pharmacy.webp";
const content = await import(`../data/${lang}.json`);
---

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const items = document.querySelectorAll(".item");
    const prevButton = document.getElementById("prev");
    const nextButton = document.getElementById("next");
    let currentIndex = 0;
    const intervalDuration = 5000;
    let intervalId;

    if (items.length === 0) {
      console.warn('No items found with the class "item".');
      return;
    }

    const updateClasses = () => {
      items.forEach((item, index) => {
        item.classList.remove("active", "left", "right", "behind");
        const position = (index - currentIndex + items.length) % items.length;

        if (position === 0) {
          item.classList.add("active");
        } else if (position === 1) {
          item.classList.add("right");
        } else if (position === items.length - 1) {
          item.classList.add("left");
        } else {
          item.classList.add("behind");
        }
      });
    };

    const nextSlide = () => {
      currentIndex = (currentIndex + 1) % items.length;
      updateClasses();
    };

    const prevSlide = () => {
      currentIndex = (currentIndex - 1 + items.length) % items.length;
      updateClasses();
    };

    const resetInterval = () => {
      clearInterval(intervalId);
      intervalId = setInterval(nextSlide, intervalDuration);
    };

    if (nextButton) {
      nextButton.addEventListener("click", () => {
        nextSlide();
        resetInterval();
      });
    } else {
      console.warn('Next button not found with id "next".');
    }

    if (prevButton) {
      prevButton.addEventListener("click", () => {
        prevSlide();
        resetInterval();
      });
    } else {
      console.warn('Previous button not found with id "prev".');
    }

    updateClasses();
    intervalId = setInterval(nextSlide, intervalDuration);
  });
</script>

<div class="flex items-center justify-center h-96 relative">
  <div class="item first">
    <h4 class="text-white text-xl font-medium absolute bottom-2 left-2">
      {content.cafe}
    </h4>
    <Image src={cafe} alt="cafe" class="size-full" />
  </div>
  <div class="item left">
    <h4 class="text-white text-xl font-medium absolute bottom-2 left-2">
      {content.Restaurants}
    </h4>
    <Image
      src={restaurant}
      alt="restaurant"
      class="size-full"
      aria-label="restaurant"
    />
  </div>
  <div class="item right">
    <h4 class="text-white text-xl font-medium absolute bottom-2 left-2">
      {content.family}
    </h4>
    <Image src={family} alt="family" class="size-full" aria-label="family" />
  </div>
  <div class="item behind">
    <h4 class="text-white text-xl font-medium absolute bottom-2 left-2">
      {content.Online_Stores}
    </h4>
    <Image
      src={onlineStores}
      alt="onlinestores"
      class="size-full"
      aria-label="onlinestores"
    />
  </div>
  <div class="item behind">
    <h4 class="text-white text-xl font-medium absolute bottom-2 left-2">
      {content.pharmacy}
    </h4>
    <Image
      src={pharmacy}
      alt="pharmacy"
      class="size-full"
      aria-label="pharmacy"
    />
  </div>
</div>
<div
  class="absolute -bottom-5 sm:-bottom-10 left-0 right-0 flex items-center justify-center gap-20">
  <button id="prev">
    <div
      class="text-2xl active:text-primaryOrange lg:hover:text-primaryOrange lg:hover:scale-125 duration-200">
      ❮
    </div>
  </button>
  <button id="next">
    <div
      class="text-2xl active:text-primaryOrange lg:hover:text-primaryOrange lg:hover:scale-125 duration-200">
      ❯
    </div>
  </button>
</div>
