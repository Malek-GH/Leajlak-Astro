---
const { id, label_text, data_needed } = Astro.props;
let lang = Astro.url.pathname.split("/")[1];
let required = false;
let required_input = "";
{
  if (data_needed === true) {
    required_input = "input-number";
    required = true;
  } else {
    (required_input = "") && (required = false);
  }
}
---

<div>
  <div class="relative">
    <input
      type="number"
      name={id}
      id={id}
      placeholder=""
      {required}
      min="8"
      step="1"
      onkeypress="return event.keyCode === 8 || event.charCode >= 48 && event.charCode <= 57"
      class:list=`${required_input} block py-4 px-1 w-full bg-white focus:border-primaryOrange/40 border-gray-400 border-b-2 focus:bg-transparent text-black duration-300 outline-0 appearance-none peer`
    />

    <label
      for={id}
      class="absolute text-sm sm:text-base text-secondaryBlueText duration-300 transform -translate-y-4 scale-90 underline-offset-1 ltr:left-0 rtl:right-0 -top-1 z-10 origin-[0] peer-focus:text-darkerOrange peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:-top-1 peer-focus:scale-90 peer-focus:-translate-y-4 start-1"
    >
      {label_text}
      {data_needed && <span class="text-red-700"> *</span>}
    </label>
  </div>
  <span class="error-message font-normal text-red-700 mt-1 hidden">
    {
      () => {
        if (lang === "ar") {
          return "يُرجى إدخال رقم صحيح.";
        }
        return "Please enter a valid number.";
      }
    }
  </span>
</div>
<style>
  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  input[type="number"] {
    -moz-appearance: textfield;
  }
</style>
