---
import { Image } from "astro:assets";

import mc from "../images/companies_logo/clients/Mcdonald.webp";
import casa from "../images/companies_logo/clients/Casapasta.webp";
import hlayel from "../images/companies_logo/logos/shawarmahlayel.webp";
import jan from "../images/companies_logo/logos/Janburger.webp";
import dominos from "../images/companies_logo/clients/Dominos-logo.webp";

const testimonials = [
  {
    quote:
      "Our partnership with Leajlak extends for more than 3 years and we have an expansion plan with them to include many regions in the Kingdom.",
    name: "Mohamed Lahlimi",
    position: "Director of logistics",
    imgSrc: mc,
    imgAlt: "Mcdonald",
  },
  {
    quote:
      "Leajlak Company is one of the fast growing companies and we are happy with our strategic partnership with them.",
    name: "Ayman",
    position: "Director of logistics",
    imgSrc: casa,
    imgAlt: "Casapasta",
  },
  {
    quote:
      "Leajlak is one of the distinguished companies in developing its work with us, and communication is one of their most important features.",
    name: "Mohammed",
    position: "Director of logistics",
    imgSrc: hlayel,
    imgAlt: "Shawarma Hlayel",
  },
  {
    quote:
      "We have built trust with Leajlak Company over the course of two years and they continue to expand.",
    name: "Jameel Alnaeb",
    position: "Director of logistics",
    imgSrc: jan,
    imgAlt: "Jan Burger",
  },
  {
    quote:
      "We contacted Leajlak Company based on their reputation in the market and had a great experience with them and started our expansion immediately.",
    name: "Marwan",
    position: "Logistic manager",
    imgSrc: dominos,
    imgAlt: "Domino's Pizza",
  },
];
---

<div class="carousel">
  <svg
    class="size-8 lg:size-10 mx-auto fill-primaryOrange/20"
    aria-hidden="true"
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 18 14"
  >
    <path
      d="M6 0H2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3H2a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Zm10 0h-4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3h-1a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Z"
    ></path>
  </svg>
  <div class="carousel-inner">
    {
      testimonials.map((testimonial) => (
        <div class="carousel-item">
          <p class="lg:text-2xl sm:text-xl font-normal">
            "{testimonial.quote}"
          </p>
          <div class="flex gap-5 items-center justify-center">
            <Image
              src={testimonial.imgSrc}
              alt={testimonial.imgAlt}
              class="w-12"
            />
            <div class="space-y-1.5 text-center">
              <h6 class="text-secondaryBlueText font-bold text-sm sm:text-base leading-none ">
                {testimonial.name}
              </h6>
              <p class="text-sm sm:text-base font-light leading-none">
                {testimonial.position}
              </p>
            </div>
          </div>
        </div>
      ))
    }
  </div>
  <div class="carousel-indicators">
    {
      testimonials.map((_, index) => (
        <button
          class={index === 0 ? "active" : ""}
          aria-label={`Slide ${index + 1}`}
          data-slide-to={index}
        />
      ))
    }
  </div>
  <button class="carousel-control-prev" aria-label="Previous slide">
    <svg
      class="size-8 rotate-180"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 512 512"
      xml:space="preserve"
      stroke="#000"
      stroke-width=".005"
      ><path
        d="M388.418 240.915 153.752 6.248c-8.331-8.331-21.839-8.331-30.17 0-8.331 8.331-8.331 21.839 0 30.17L343.163 256 123.582 475.582c-8.331 8.331-8.331 21.839 0 30.17 8.331 8.331 21.839 8.331 30.17 0l234.667-234.667c8.33-8.331 8.33-21.839-.001-30.17z"
      ></path></svg
    >
  </button>
  <button class="carousel-control-next" aria-label="Next slide"
    ><svg
      class="size-8"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 512 512"
      xml:space="preserve"
      stroke="#000"
      stroke-width=".005"
      ><path
        d="M388.418 240.915 153.752 6.248c-8.331-8.331-21.839-8.331-30.17 0-8.331 8.331-8.331 21.839 0 30.17L343.163 256 123.582 475.582c-8.331 8.331-8.331 21.839 0 30.17 8.331 8.331 21.839 8.331 30.17 0l234.667-234.667c8.33-8.331 8.33-21.839-.001-30.17z"
      ></path></svg
    ></button
  >
</div>

<style>
  .carousel {
    @apply relative flex min-h-96 w-full flex-col items-center justify-center overflow-hidden;
  }

  .carousel-inner {
    @apply flex h-full w-full snap-x flex-row items-center transition-all duration-500 ease-carousel;
  }
  .carousel-item {
    @apply flex w-full flex-shrink-0 flex-grow-0 flex-col items-center gap-y-10 p-5 text-center sm:py-6 lg:px-40;
  }

  .carousel-item.active {
    @apply block;
  }

  .carousel-controls {
    @apply absolute flex w-full justify-between;
  }

  .carousel-control-prev,
  .carousel-control-next {
    @apply absolute top-1/2 hidden cursor-pointer sm:flex;
  }

  .carousel-control-prev {
    @apply left-0;
  }

  .carousel-control-next {
    @apply right-0;
  }

  .carousel-indicators {
    @apply absolute bottom-0 left-1/2 flex -translate-x-1/2 gap-x-1.5 text-center;
  }

  .carousel-indicators button {
    @apply size-2 cursor-pointer rounded-full border-none bg-black/15;
  }

  .carousel-indicators button.active {
    @apply bg-black/80;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const carouselInner =
      document.querySelector<HTMLElement>(".carousel-inner");
    const items = document.querySelectorAll(".carousel-item");
    const indicators = document.querySelectorAll(".carousel-indicators button");
    const nextBtn = document.querySelector(".carousel-control-next");
    const prevBtn = document.querySelector(".carousel-control-prev");
    let currentIndex = 0;
    let carouselInterval;

    function updateCarousel() {
      carouselInner.style.transform = `translateX(-${currentIndex * 100}%)`;
      indicators.forEach((indicator, index) => {
        indicator.classList.toggle("active", index === currentIndex);
      });
    }

    function showItem(index) {
      currentIndex = index;
      if (currentIndex >= items.length) {
        currentIndex = 0;
      } else if (currentIndex < 0) {
        currentIndex = items.length - 1;
      }
      updateCarousel();
    }

    function showNextItem() {
      showItem(currentIndex + 1);
    }

    function showPrevItem() {
      showItem(currentIndex - 1);
    }

    function resetInterval() {
      clearInterval(carouselInterval);
      carouselInterval = setInterval(showNextItem, 5000);
    }

    nextBtn.addEventListener("click", () => {
      showNextItem();
      resetInterval();
    });

    prevBtn.addEventListener("click", () => {
      showPrevItem();
      resetInterval();
    });

    indicators.forEach((indicator, index) => {
      indicator.addEventListener("click", () => {
        showItem(index);
        resetInterval();
      });
    });
    carouselInterval = setInterval(showNextItem, 5000);
    updateCarousel();
  });
</script>
